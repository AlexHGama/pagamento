{"version":3,"sources":["card.jsx","mask.jsx","Tela.jsx","index.js"],"names":["cartoes","card_number","cvv","expiry_date","mask","e","currentFormat","target","value","replace","padStart","slice","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Tela","props","_useState","useState","_useState2","slicedToArray","listaItem","setListaItem","_useState3","_useState4","modal","setModalAberto","_useState5","_useState6","pagamento","setPagamento","_useState7","_useState8","aprovado","setAprovado","_useState9","_useState10","reprovado","setReprovado","useEffect","axios","get","resp","data","console","log","erro","dadosCartao","_ref","asyncToGenerator","_callee","formData","cartao","selecaoCartao","_context","preventDefault","FormData","find","cartaoObjeto","fetch","body","destination_user_id","id","json","_x","apply","arguments","react_default","a","createElement","Fragment","className","onClick","onSubmit","placeholder","onKeyUp","maxLength","required","defaultValue","map","substring","item","src","img","username","elemento","document","getElementById","ReactDOM","render","src_Tela"],"mappings":"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","file":"static/js/main.66026aa9.chunk.js","sourcesContent":["export const cartoes = [\n  // valid card\n{\n  card_number: '1111111111111111',\n  cvv: 789,\n  expiry_date: '01/18',\n},\n  // invalid card\n{\n  card_number: '4111111111111234',\n  cvv: 123,\n  expiry_date: '01/20',\n},\n];\n","function mask(e) {\n    const currentFormat = e.target.value\n        .replace(/\\D/g, '')\n        .replace(/^0*/, '')\n        .padStart(3, '0');\n    \n        e.target.value =\n        'R$ ' +\n        currentFormat.slice(0, -2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') +\n        ',' +\n        currentFormat.slice(-2);\n}\n    \nexport default mask\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport  { cartoes }  from \"./card\";\r\nimport mask from \"./mask\";\r\nimport \"./Modal.css\";\r\nimport \"./Componente.css\";\r\n\r\n\r\n \r\nexport function Tela(props){\r\n\r\n  const [listaItem, setListaItem] = useState([]);\r\n  const [modal, setModalAberto] = useState(false);\r\n  const [pagamento, setPagamento] = useState(null);\r\n  const [aprovado, setAprovado] = useState(false);\r\n  const [reprovado, setReprovado] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://www.mocky.io/v2/5d531c4f2e0000620081ddce\")\r\n      .then((resp) => {\r\n       setListaItem(resp.data)\r\n       console.log(resp);\r\n      }) \r\n      .catch(erro=> {\r\n      console.log(erro);\r\n      })\r\n  }, []);\r\n  \r\n  \r\n\r\n\r\n  //Função Modal de pagamento\r\n //Pagamento para o map \"Usuario\"\r\n  function onClick(item) {\r\n    setPagamento(item);\r\n    setModalAberto(true);\r\n  }  \r\n\r\n\r\n\r\n  const dadosCartao = async (e) => \r\n  { e.preventDefault();\r\n\r\n  const formData = new FormData(e.target);\r\n  const value = formData.get(\"valorPago\");\r\n  const cartao = formData.get(\"selecionaCartao\");\r\n  const selecaoCartao = cartoes.find((cartaoObjeto) => cartaoObjeto.card_number === cartao);\r\n   \r\n  // Pega a informação e verifica no metodo POST \r\n\r\n  await (\r\n    await fetch(\"https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989\",\r\n      {\r\n        method: \"POST\",\r\n        body: {\r\n          card_number: cartao,\r\n          cvv: selecaoCartao.cvv,\r\n          expiry_date: selecaoCartao.expiry_date,\r\n\r\n          destination_user_id: pagamento.id,\r\n\r\n          value: value,\r\n        },\r\n      })\r\n  ).json(); \r\n\r\n       //verificação do cartão selecionado \r\n       //Caso for true pagamento realizado com sucesso\r\n       //Caso for false pagamento não realizado \r\n\r\n  if (cartao === \"1111111111111111\") {\r\n    setAprovado(true);\r\n  } else {\r\n   setReprovado(true);\r\n  }\r\n   setModalAberto(false);\r\n\r\n  };\r\n\r\n\r\n  //Modal pagamento seleção cartão crédito\r\n  return (   \r\n  <> \r\n    {     \r\n      modal && (\r\n      \r\n      <div className=\"modal\">\r\n        \r\n        <div>\r\n            <div className=\"textmodal\">\r\n              <p>Pagamento para: {pagamento.name}</p>\r\n            </div>\r\n                   \r\n            <div onClick={() => setModalAberto(false)}>\r\n              <p className=\"fechar\">X</p>\r\n            </div>\r\n             \r\n          <form onSubmit={dadosCartao}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"R$: 0,00\"\r\n                onKeyUp={mask}\r\n                maxLength={30}\r\n                required\r\n              />\r\n            </div>\r\n              {/*<Informe o cartão*/}\r\n              <select name=\"selecionaCartao\" defaultValue={\"info_card\"}>\r\n                {cartoes.map((cartao) => {\r\n                 return (\r\n                 <option\r\n                   value={cartao.card_number}\r\n                  >\r\n                    Cartão com final {cartao.card_number.substring(12)}\r\n                  </option>\r\n                  );\r\n                })\r\n                }\r\n              </select>\r\n\r\n              <button className=\"botaomodal\"\r\n                type=\"submit\"\r\n              >  \r\n               Pagar \r\n              </button>\r\n          </form>\r\n            \r\n        </div>\r\n         \r\n                     \r\n      </div>\r\n      \r\n             \r\n    )} \r\n      \r\n    { \r\n      //Listagem usuários nome, ID e Username   \r\n      <header className=\"listatodos\">\r\n      \r\n        <div className=\"container1\"></div> \r\n          {listaItem.map((item) => {\r\n           return (\r\n            \r\n            <div className=\"usuario\" key={item.id}>\r\n              <div className=\"container\">\r\n                \r\n                <div className=\"image\">\r\n                  <img id=\"imagem\" src={item.img} />\r\n                </div>\r\n\r\n                <div className=\"dados\">\r\n                  <p className=\"nome\">\r\n                    <b>Usuário:</b> {item.name}\r\n                  </p>\r\n                  <p>\r\n                    <b className=\"user\">ID:</b> {item.id}\r\n                    <b>-Username:</b> {item.username}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"botao\">\r\n                  <button onClick={() => {onClick(item);}} id=\"botao1\">\r\n                    Pagar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )})}         \r\n    </header>\r\n    }\r\n     \r\n    {\r\n      //Modal de pagamento sucesso no pagamento (true)\r\n      \r\n      aprovado && (\r\n          \r\n        <div className=\"modal\">         \r\n              \r\n          <div onClick={() => setAprovado(false)}>\r\n           <p className=\"fechar\">X</p>              \r\n          </div>\r\n          <div  className=\"texmodal\" >\r\n            <span> Pagamento foi <strong> concluido</strong> com sucesso para : {pagamento.name} </span> \r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    {\r\n      //Modal de pagamento erro no pagamento (false)\r\n      \r\n      reprovado && (\r\n          \r\n        <div className=\"modal\">\r\n          <div onClick={() => setReprovado(false)}>\r\n            <p className=\"fechar\">X</p>              \r\n          </div >\r\n          <div  className=\"texmodal\" >                     \r\n            <span>O pagamento NÃO foi<strong> concluido.</strong> </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }  \r\n    \r\n    \r\n  </>\r\n)};\r\n\r\nexport default Tela;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Tela from './Tela'\n \nconst elemento = document.getElementById('root')\n\nReactDOM.render(\n   \n  <Tela/>\n\n,elemento)\n"],"sourceRoot":""}